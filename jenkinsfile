pipeline {
    agent any

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "192.168.50.10:8081"
        NEXUS_REPOSITORY = "docker-repo"
        NEXUS_CREDENTIAL_ID = "nexus"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/attia12/Pipeline.git'
            }
        }
        stage('Set Permissions') {
            steps {
                sh 'chmod +x ./mvnw'
            }
        }
        stage('Compile') {
            steps {
                sh './mvnw clean compile'
            }
        }
        stage('Test') {
            steps {
                sh './mvnw test'
            }
        }
        stage('Package') {
            steps {
                sh './mvnw package'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                       sh "${scannerHome}/bin/sonar-scanner -X"
                    }
                }
            }
        }
        stage('Building images (mysql)') {
            steps {
                script {
                    // Ensure the Dockerfile is in the root of the project
                    sh 'docker-compose build'
                }
            }
        }
        stage("publish to nexus") {
            steps {
                script {
                    def artifactPath = "target/eventsProject-1.0.0-SNAPSHOT.jar"

                    echo "*** File: ${artifactPath}, group: tn.esprit, packaging: jar, version 1.0.0-SNAPSHOT ***"

                    nexusArtifactUploader(
                        nexusVersion: NEXUS_VERSION,
                        protocol: NEXUS_PROTOCOL,
                        nexusUrl: NEXUS_URL,
                        groupId: 'tn.esprit',
                        version: '1.0.0-SNAPSHOT',
                        repository: NEXUS_REPOSITORY,
                        credentialsId: NEXUS_CREDENTIAL_ID,
                        artifacts: [
                            // Artifact generated such as .jar, .ear and .war files.
                            [artifactId: 'eventsProject',
                             classifier: '',
                             file: artifactPath,
                             type: 'jar']
                        ]
                    )
                }
            }
        }
    }

    post {
        always {
            junit 'target/surefire-reports/*.xml'
            cleanWs()
        }
    }
}
